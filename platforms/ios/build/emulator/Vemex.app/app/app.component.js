"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
//import {NS_ROUTER_DIRECTIVES} from "nativescript-angular/router";
var nativescript_barcodescanner_1 = require("nativescript-barcodescanner");
var platform_1 = require("tns-core-modules/platform");
var dialogs = require("tns-core-modules/ui/dialogs");
//import * as clipboardModule from "nativescript-clipboard";
var AppComponent = (function () {
    function AppComponent() {
        //this.barcodescanner = new BarcodeScanner();
        this.url = "https://vemex.net";
        this.barcodescanner = new nativescript_barcodescanner_1.BarcodeScanner();
    }
    AppComponent.prototype.webViewTouch = function (args) {
        console.log("touch event");
    };
    AppComponent.prototype.webViewPan = function (args) {
        console.log("pan gesture");
    };
    AppComponent.prototype.webViewLoaded = function (args) {
        var webview = args.object;
        if (platform_1.isAndroid) {
            webview.android.getSettings().setDisplayZoomControls(false);
        }
    };
    AppComponent.prototype.scanBarcode = function () {
        var _this = this;
        dialogs.confirm({
            message: "Now you will be prompted to scan a QR code.\n" +
                "This QR code should contain Bitcoin (BTC) or Fargocoin (FRGC) wallet address. Usually, such QR codes could be generated by applications that work with different cryptocurrencies. You can send BTC or FRGC cryptocurrencies by the address.",
            okButtonText: "Scan",
            cancelButtonText: "Cancel",
        }).then(function (result) {
            // result argument is boolean
            console.log("Dialog result: " + result);
            if (result) {
                _this.requestPermission().then(function (result) {
                    _this.barcodescanner.scan({
                        cancelLabel: "Stop scanning",
                        message: "Go scan something",
                        preferFrontCamera: false,
                        showFlipCameraButton: true
                    }).then(function (result) {
                        console.log("Scan format: " + result.format);
                        console.log("Scan text:   " + result.text);
                        // clipboardModule.setText(result.text).then(function() {
                        //     console.log(result.text + " copied to clipboard");
                        // });
                        dialogs.confirm({
                            message: "The wallet address was scanned successfully!\n" +
                                "It was copied to the system clipboard. Please, paste the wallet address into the “Recipient address” field of the “Withdraw” dialog box to specify by what address you want to send your cryptocurrency.",
                            okButtonText: "Ok",
                        });
                    }, function (error) {
                        console.log("No scan: " + error);
                    });
                }, function (error) {
                    console.log("ERROR", error);
                });
            }
        });
    };
    AppComponent.prototype.requestPermission = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.barcodescanner.available().then(function (available) {
                if (available) {
                    _this.barcodescanner.hasCameraPermission().then(function (granted) {
                        if (!granted) {
                            _this.barcodescanner.requestCameraPermission().then(function () {
                                resolve("Camera permission granted");
                            });
                        }
                        else {
                            resolve("Camera permission was already granted");
                        }
                    });
                }
                else {
                    reject("This device does not have an available camera");
                }
            });
        });
    };
    AppComponent.prototype.ngOnInit = function () {
        // this.webview.on(WebView.loadFinishedEvent, function (args: LoadEventData) {
        //     console.log("loadFinishedEvent called");
        this.permition = this.requestPermission();
    };
    AppComponent = __decorate([
        core_1.Component({
            selector: "ns-app",
            // templateUrl: "app.component.html",
            template: "\n    <ActionBar title=\"VEMEX\">\n        <ActionItem text=\"QR Code\" (tap)=\"scanBarcode()\" ios.position=\"left\">        \n        </ActionItem>\n    </ActionBar>\n    <GridLayout>\n       <WebView #webview loaded=\"webViewLoaded\"  touch=\"webViewTouch\" pan=\"webViewPan\" [src]=\"url\"></WebView>\n    </GridLayout>",
        }),
        __metadata("design:paramtypes", [])
    ], AppComponent);
    return AppComponent;
}());
exports.AppComponent = AppComponent;
